//
//  OpenWeatherTileOverlay.swift
//  Weathery
//
//  Created by Anna Filin on 18/02/2025.
//

import MapKit

class OpenWeatherTileOverlay: MKTileOverlay {
    private let apiKey = Config.openWeatherApiKey // üî• –í—Å—Ç–∞–≤—å —Å–≤–æ–π API-–∫–ª—é—á
    
    let layer: String

    init(layer: String) {
        self.layer = layer
        super.init(urlTemplate: nil)
        self.canReplaceMapContent = false // ‚úÖ –¢–∞–π–ª—ã –Ω–∞–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è –ø–æ–≤–µ—Ä—Ö –∫–∞—Ä—Ç—ã
    }

    override func url(forTilePath path: MKTileOverlayPath) -> URL {
        let urlString = "https://tile.openweathermap.org/map/\(layer)/\(path.z)/\(path.x)/\(path.y).png?appid=\(apiKey)"
        print("üåç –ó–∞–ø—Ä–æ—Å —Ç–∞–π–ª–∞: \(urlString)")
        return URL(string: urlString)!
    }
}


class OpenWeatherTileRenderer: MKTileOverlayRenderer {
    override func draw(_ mapRect: MKMapRect, zoomScale: MKZoomScale, in context: CGContext) {
        print("üé® –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç–∞–π–ª—ã, ZoomScale: \(zoomScale)")

        let rect = self.rect(for: mapRect)
        let colorSpace = CGColorSpaceCreateDeviceRGB()

        // ‚úÖ –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–µ —Ü–≤–µ—Ç–∞: –æ—Ç –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–≥–æ —Å–∏–Ω–µ–≥–æ –∫ –±–µ–ª–æ–º—É
        let colors: [CGFloat] = [
            0.1, 0.1, 0.8, 0.3,  // –¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π —Å 30% –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
            0.5, 0.5, 1.0, 0.1   // –ì–æ–ª—É–±–æ–π —Å 10% –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
        ]

        let gradient = CGGradient(colorSpace: colorSpace, colorComponents: colors, locations: nil, count: 2)!

        let startPoint = CGPoint(x: rect.midX, y: rect.minY)
        let endPoint = CGPoint(x: rect.midX, y: rect.maxY)

        context.drawLinearGradient(gradient, start: startPoint, end: endPoint, options: [])
        context.setShadow(offset: CGSize(width: 0, height: 0), blur: 10, color: UIColor.blue.cgColor)

        context.setAlpha(0.9) // ‚úÖ –¢–∞–π–ª—ã –æ—Å—Ç–∞—é—Ç—Å—è –≤–∏–¥–∏–º—ã–º–∏, –Ω–æ –ø–ª–∞–≤–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É—é—Ç—Å—è —Å –∫–∞—Ä—Ç–æ–π
        super.draw(mapRect, zoomScale: zoomScale, in: context)
    }
    
//    override func draw(_ mapRect: MKMapRect, zoomScale: MKZoomScale, in context: CGContext) {
//            print("üé® –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç–∞–π–ª—ã, ZoomScale: \(zoomScale)")
//
//            let rect = self.rect(for: mapRect)
//            
//            // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º —Ü–≤–µ—Ç–æ–≤–æ–π —Ñ–æ–Ω (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å)
//            context.setFillColor(UIColor.blue.withAlphaComponent(0.3).cgColor)
//            context.fill(rect)
//
//            // ‚úÖ –£–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω—É—é –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å (–µ—Å–ª–∏ PNG —Å–ª–∏—à–∫–æ–º –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ)
//            context.setAlpha(1.0)
//
//            // ‚úÖ –†–∏—Å—É–µ–º —Ç–∞–π–ª—ã OpenWeather –ø–æ–≤–µ—Ä—Ö
//            super.draw(mapRect, zoomScale: zoomScale, in: context)
//        }
}
